{"version":3,"file":"static/js/730.8c05f1d0.chunk.js","mappings":"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","sources":["views/note/EditNote.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { HiOutlineDocumentText } from 'react-icons/hi';\nimport {\n    CButton,\n    CCard,\n    CCardBody,\n    CCardGroup,\n    CCardHeader,\n    CCol,\n    CContainer,\n    CForm,\n    CFormInput,\n    CInputGroup,\n    CInputGroupText,\n    CRow,\n} from '@coreui/react'\nimport { useNavigate } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { useParams } from 'react-router-dom';\nimport { getSingleNote, updateOneNote } from '../../Store/slices/noteSlice';\n\nexport default function EditBrand() {\n    const { _id } = useParams();\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n    const [note, setNote] = useState({\n        title: \"\",\n        description: \"\",\n    });\n    function getData(name, value) {\n        setNote((oldData) => {\n            return {\n                ...oldData,\n                [name]: value\n            }\n        })\n    }\n    async function postData() {\n        const item = {\n            _id: _id,\n            note: note\n        }\n        const response = await dispatch(updateOneNote(item))\n        if (response) {\n            if (response.payload.data) {\n                navigate(`/notes`)\n            }\n            else {\n                alert(response.payload.message)\n            }\n        }\n    }\n    async function fetchSingleNote() {\n        try {\n            const response = await dispatch(getSingleNote(_id))\n            if (response.payload.data.result === \"Done\")\n                setNote(response.payload.data.data);\n            else {\n                alert(response.payload.data.message)\n            }\n        } catch (error) {\n            console.error('Error fetching data:', error);\n        }\n    }\n    useEffect(() => {\n        fetchSingleNote()\n    }, [])\n    return (\n        <div className=\"bg-light min-vh-100 d-flex flex-row\">\n            <CContainer>\n                <CRow >\n                    <CCol md={12}>\n                        <CCardGroup>\n                            {note && <CCard className=\"p-4\">\n                                <CCardHeader>\n                                    <h5 className='text-center'>Edit Note Details</h5>\n                                </CCardHeader>\n                                <CCardBody>\n                                    <CForm>\n                                    <CRow>\n                                            <CCol sm={6}>\n                                                <CInputGroup className=\"mb-4\">\n                                                    <CFormInput\n                                                        type=\"text\"\n                                                        name=\"title\"\n                                                        placeholder=\"Note Title\"\n                                                        value={note.title}\n                                                        onChange={(e) => {\n                                                            getData(e.target.name, e.target.value)\n                                                        }}\n                                                    />\n                                                </CInputGroup>\n                                            </CCol>\n                                            <CCol sm={6}>\n                                                <CInputGroup className=\"mb-4\">\n                                                    <CFormInput\n                                                        type=\"text\"\n                                                        name=\"description\"\n                                                        placeholder=\"Descritption\"\n                                                        value={note.description}\n                                                        onChange={(e) => {\n                                                            getData(e.target.name, e.target.value)\n                                                        }}\n                                                    />\n                                                </CInputGroup>\n                                            </CCol>\n                                            <CCol sm={6}>\n                                                \n                                            </CCol>\n                                        </CRow>\n                                        <CRow>\n                                            <CCol xs={12}>\n                                                <CButton color=\"success\" className=\"px-4 text-light fw-bold\" onClick={postData}>\n                                                    Update\n                                                </CButton>\n                                            </CCol>\n                                        </CRow>\n                                    </CForm>\n                                </CCardBody>\n                            </CCard>}\n                        </CCardGroup>\n                    </CCol>\n                </CRow>\n            </CContainer>\n        </div>\n    )\n}\n"],"names":["EditBrand","_id","useParams","navigate","useNavigate","dispatch","useDispatch","_useState","useState","title","description","_useState2","_slicedToArray","note","setNote","getData","name","value","oldData","_objectSpread","_defineProperty","_postData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","item","response","wrap","_context","prev","next","updateOneNote","sent","payload","data","alert","message","stop","apply","arguments","_fetchSingleNote","_callee2","_context2","getSingleNote","result","t0","console","error","useEffect","fetchSingleNote","_jsx","className","children","CContainer","CRow","CCol","md","CCardGroup","_jsxs","CCard","CCardHeader","CCardBody","CForm","sm","CInputGroup","CFormInput","type","placeholder","onChange","e","target","xs","CButton","color","onClick"],"sourceRoot":""}